library ThiefBush requires PublicLibrary, TimerUtils, Jump, ChatCommands {
	real HEIGHT = 140;
	real DURATION = 1;
	real GRAVITY = 50;

	Table bushEntranceExitMapping;

	region thiefBushEntrance_NW_A;
	region thiefBushEntrance_NE_A;
	region thiefBushEntrance_SE_A;
	region thiefBushEntrance_SW_A;
	region thiefBushEntrance_SW_B;
	region thiefBushEntrance_SW_C;

	function ThiefBushEntered() -> boolean {
		unit enteringUnit = GetEnteringUnit();
		region entrance = GetTriggeringRegion();
		rect exit = bushEntranceExitMapping.rect_h[entrance];
		real destX = GetRandomX(exit);
		real destY = GetRandomY(exit);

		if (IsUnitType(enteringUnit, UNIT_TYPE_GROUND)) {
			PauseUnit(enteringUnit, true);
			Jump.start(enteringUnit, destX, destY, HEIGHT, DURATION, GRAVITY);
		}

		enteringUnit = null;
		entrance = null;
		exit = null;

		return false;
	}

	function ThiefBushExited() -> boolean {
		PauseUnit(EVENT_JUMP_UNIT, false);
		return false;
	}

	function onInit() {
		trigger t = CreateTrigger();
		bushEntranceExitMapping = Table.create();

		thiefBushEntrance_NW_A = CreateRegion();
		thiefBushEntrance_NE_A = CreateRegion();
		thiefBushEntrance_SE_A = CreateRegion();
		thiefBushEntrance_SW_A = CreateRegion();
		thiefBushEntrance_SW_B = CreateRegion();
		thiefBushEntrance_SW_C = CreateRegion();

		RegionAddRect(thiefBushEntrance_NW_A, gg_rct_Thief_Bush_NW_A_In);
		RegionAddRect(thiefBushEntrance_NE_A, gg_rct_Thief_Bush_NE_A_In);
		RegionAddRect(thiefBushEntrance_SE_A, gg_rct_Thief_Bush_SE_A_In);
		RegionAddRect(thiefBushEntrance_SW_A, gg_rct_Thief_Bush_SW_A_In);
		RegionAddRect(thiefBushEntrance_SW_B, gg_rct_Thief_Bush_SW_B_In);
		RegionAddRect(thiefBushEntrance_SW_C, gg_rct_Thief_Bush_SW_C_In);

		bushEntranceExitMapping.rect_h[thiefBushEntrance_NW_A] = gg_rct_Thief_Bush_NW_A_Out;
		bushEntranceExitMapping.rect_h[thiefBushEntrance_NE_A] = gg_rct_Thief_Bush_NE_A_Out;
		bushEntranceExitMapping.rect_h[thiefBushEntrance_SE_A] = gg_rct_Thief_Bush_SE_A_Out;
		bushEntranceExitMapping.rect_h[thiefBushEntrance_SW_A] = gg_rct_Thief_Bush_SW_A_Out;
		bushEntranceExitMapping.rect_h[thiefBushEntrance_SW_B] = gg_rct_Thief_Bush_SW_B_Out;
		bushEntranceExitMapping.rect_h[thiefBushEntrance_SW_C] = gg_rct_Thief_Bush_SW_C_Out;

		TriggerRegisterEnterRegion(t, thiefBushEntrance_NW_A, null);
		TriggerRegisterEnterRegion(t, thiefBushEntrance_NE_A, null);
		TriggerRegisterEnterRegion(t, thiefBushEntrance_SE_A, null);
		TriggerRegisterEnterRegion(t, thiefBushEntrance_SW_A, null);
		TriggerRegisterEnterRegion(t, thiefBushEntrance_SW_B, null);
		TriggerRegisterEnterRegion(t, thiefBushEntrance_SW_C, null);
		TriggerAddCondition(t, function ThiefBushEntered);

	    OnJumpFinish(function ThiefBushExited);

	    debug {
	    	ChatCommands.registerArgFunc(null, "thief-bush", function (ArgsList a) {
	    		if (a[0] == "") {
	    			BJDebugMsg("-thief-bush [GRAVITY|HEIGHT|DURATION|PAUSE] value");
	    		} else if (a[0] == "GRAVITY") {
	    			GRAVITY = S2R(a[1]);
	    			BJDebugMsg("GRAVITY = " + R2S(GRAVITY));
	    		}
	    		else if (a[0] == "HEIGHT") {
	    			HEIGHT = S2R(a[1]);
	    			BJDebugMsg("HEIGHT = " + R2S(HEIGHT));
	    		}
	    		else if (a[0] == "DURATION")  {
	    			DURATION = S2R(a[1]);
	    			BJDebugMsg("DURATION = " + R2S(DURATION));
	    		}
	    	});
	    }
	}
}
